services:
  # Servicio Consul
  consul:
    image: hashicorp/consul:1.15.3
    container_name: consul
    command: consul agent -server -bootstrap-expect=1 -client=0.0.0.0 -ui -data-dir=/consul/data
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    restart: always
    networks:
      - mynetwork

  # Servicio MySQL
  db:
    image: mysql:5.7
    container_name: database
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: myflaskapp
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mynetwork

  # Microservicio de productos
  microproducts:
    build: ./microProducts
    container_name: microproducts
    restart: always
    depends_on:
      - db
      - consul
    ports:
      - "5003:5003"
    environment:
      - DATABASE_URL=mysql://root:root@db/myflaskapp
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    networks:
      - mynetwork

  # Microservicio de usuarios
  microusers:
    build: ./microUsers
    container_name: microusers
    restart: always
    depends_on:
      - db
      - consul
    ports:
      - "5002:5002"
    environment:
      - DATABASE_URL=mysql://root:root@db/myflaskapp
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    networks:
      - mynetwork

  i

  # Frontend con Flask
  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    depends_on:
      - microproducts
      - microusers
    ports:
      - "5001:5001"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    networks:
      - mynetwork
    command: ["python", "run.py"]

volumes:
  db_data:

networks:
  mynetwork:
    driver: bridge
